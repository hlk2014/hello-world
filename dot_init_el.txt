;; init.el --- Emacs configuration

;; INSTALL PACKAGES
;; --------------------------------------

(require 'package)

(add-to-list 'package-archives
       '("melpa" . "http://melpa.org/packages/") t)

(package-initialize)
(when (not package-archive-contents)
  (package-refresh-contents))

(defvar myPackages
  '(better-defaults
    ein
    elpy
    flycheck
    material-theme
    py-autopep8))

(mapc #'(lambda (package)
    (unless (package-installed-p package)
      (package-install package)))
      myPackages)

;; BASIC CUSTOMIZATION
;; --------------------------------------

(setq inhibit-startup-message t) ;; hide the startup message
;;(load-theme 'material t) ;; load material theme
(global-linum-mode t) ;; enable line numbers globally

;; PYTHON CONFIGURATION
;; --------------------------------------

(elpy-enable)
;;(elpy-use-ipython)

;; use flycheck not flymake with elpy
(when (require 'flycheck nil t)
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode))

;; enable autopep8 formatting on save
(require 'py-autopep8)
(add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)

;; init.el ends here(setq inhibit-startup-screen t)
(setq python-shell-interpreter "ipython" python-shell-interpreter-args "--simple-prompt --pprint")

(tool-bar-mode -1)
(menu-bar-mode -1)
(set-cursor-color "#cd5c5c")
(add-to-list 'default-frame-alist '(height . 30))
(add-to-list 'default-frame-alist '(width . 110))
(set-face-attribute 'default nil :height 140)

;;(global-set-key (kbd "<f11>")  'previous-buffer)
;;(global-set-key (kbd "<f12>")  'next-buffer)
(global-set-key (kbd "C-S-p")  'previous-buffer)
(global-set-key (kbd "C-S-n")  'next-buffer)
(global-set-key (kbd "C-S-o")  'next-multiframe-window)
(global-set-key (kbd "C-S-k")  'kill-buffer-and-window)
(global-set-key (kbd "C-+")    'text-scale-increase)
(global-set-key (kbd "C--")    'text-scale-decrease)
(global-hl-line-mode 1)
(set-face-attribute 'hl-line nil :foreground nil :background "gray70")

(defun hlk-kill-other-buffers ()
  (interactive)
  (mapc 'kill-buffer
      (delq (current-buffer)
      (remove-if-not 'buffer-file-name (buffer-list)))))

(defun hlk-kill-all-buffers ()
  (interactive)
  (mapc 'kill-buffer (buffer-list)))

(defun hlk-init-dot-el ()
  (interactive)
  (find-file user-init-file))

(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:complete-on-dot t) ; optional

;; Auto-refresh dired on file change
(add-hook 'dired-mode-hook 'auto-revert-mode)
(global-set-key (kbd "C-S-d")  'dired-jump)

;; Use emacs compile command to run python script in current buffer
;; https://stackoverflow.com/questions/443302/emacs-how-to-compile-run-make-without-pressing-enter-for-the-compile-command
;; http://ergoemacs.org/emacs/elisp_run_current_file.html
;; https://www.masteringemacs.org/article/mastering-key-bindings-emacs
(setq compilation-read-command nil)
(add-hook 'python-mode-hook
          (lambda ()
            (set (make-local-variable 'compile-command)
                 (concat "python " buffer-file-name))))
(defun add-python-f5-compile-key ()
  (local-set-key (kbd "C-S-<f5>") 'compile))
(add-hook 'python-mode-hook 'add-python-f5-compile-key)
;; (global-set-key (kbd "<f5>")  'compile)

;;http://ergoemacs.org/emacs/modernization_isearch.html
(defun xah-search-current-word ()
  "Call `isearch' on current word or text selection.
“word” here is A to Z, a to z, and hyphen 「-」 and underline 「_」, independent of syntax table.
URL `http://ergoemacs.org/emacs/modernization_isearch.html'
Version 2015-04-09"
  (interactive)
  (let ( $p1 $p2 )
    (if (use-region-p)
        (progn
          (setq $p1 (region-beginning))
          (setq $p2 (region-end)))
      (save-excursion
        (skip-chars-backward "-_A-Za-z0-9")
        (setq $p1 (point))
        (right-char)
        (skip-chars-forward "-_A-Za-z0-9")
        (setq $p2 (point))))
    (setq mark-active nil)
    (when (< $p1 (point))
      (goto-char $p1))
    (isearch-mode t)
    (isearch-yank-string (buffer-substring-no-properties $p1 $p2))))

(global-set-key (kbd "C-S-s")  'xah-search-current-word)









